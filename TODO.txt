LMS NOW ACTIVE -- will input all books in home for bookkeeping.

Function implementation (stuff to fix)
    main.search_author
        returns an autofill of the first letter if in library.
        I want to return an autofill of all authors with the current input:
            Ex: type "g" return all "g%" 
Implement abstract.py for abstract data structure use
    modify LMS.txt file contents = book attributes already in library
    Implement ADTs (BST, dictionary)
    learn implementation
Keep track of books at home

-----------
*Currently Working On*:

    Implementing SQLite DB
        Debug: csv_to_db.py script execution -- prob input manually 
        figure out what the unknown characters are being created in db.db 
        look into database (primary ... etc) keys, constraints ...
    
-----------
Completed:
    # now reads file data correctly
    main.display_books
        currently prints only the hardcoded data 

    # now stores information in LMS.txt file and loads data into shelf list correctly
    Store book information into LMS.txt w/o overwriting
    check if information is the same:
        if so, add only the new data

    # Successful implementation:
        libaary.search_title
        library.book_titles
        library.remove_book
    # constraints added
    Add book constaints 
    # now prints all book titles for at-a-glance removal when using main.remove_book method
    main.remove_book
        show a list of all book titles to easily see which one to remove
    # now autofill and debugged after modifying. Bug was in book.py constaint for set_format.
    Implement "physical"/"digital" string when writing format data when typing "p" or "d" 
        Implement "physical"/"digital" string when writing format data when typing "p" or "d" 
        same thing for storage locations "S1" = "Shelf 1"
    # now formatted for sql implementation using csv files
    reformat LMS.txt to LMS.csv for data parsing for future DB implementation
    Convert content storage to CSV file 
    # SQLite successfully ran and created test table with constaint
    Implement SQL DB for storage and proper bookkeeping
    choose a DB, maybe SQLite